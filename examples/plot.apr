; Just a quick and dirty graph plotter.

(defn plot [f x1 x2 xscale y1 y2 yscale]
  (let [width (.ceil (* (- x2 x1) xscale))
        height (.ceil (* (- y2 y1) yscale))
        points (map (fn [x] [(.round (* xscale (- x x1)))
                             (.round (* yscale (- (f x) y1)))])
                    (.step x1 x2 (/ xscale)))
        graph (Array. (inc height) | #(* " " width))]
    (each [p points]
      (let [x (first p)
            y (second p)]
        (when (<= 0 y height)
          (#|.[]=| (graph (- height y)) x "*"))))
    (each [line graph]
          (println line))))

(println "Exponential:")
(plot Math/exp 0 5 10 0 20 1)

(println "Logarithm base 10:")
(plot Math/log10 1 15 5 0 1.5 10)

(println "Sine:")
(plot Math/sin 0 (* 4 Math::PI) 5 -1 1 5)

(println "Tangent:")
(plot Math/tan 0 (* 2 Math::PI) 10 -5 5 2)
