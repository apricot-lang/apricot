#!/usr/bin/env ruby
require 'apricot'

evals = []

options = Rubinius::Options.new "Usage: #{$0} [options] [program]", 20
options.doc "OPTIONS:"

options.on "-e", "CODE", "evaluate CODE and print the result" do |code|
  evals << [:eval, code]
end

options.on "-h", "--help", "display this help" do
  puts options
  exit
end

options.parse(ARGV).each do |file|
  evals << [:file, file]
end

if evals.empty?
  if $stdin.tty?
    require 'apricot/repl'
    Apricot::REPL.new.run
  else
    evals << [:stdin]
  end
end

evals.each do |type, *args|
  case type
  when :eval
    Apricot::Compiler.eval(args.first, "(eval)", 1)
  when :stdin
    Apricot::Compiler.eval(STDIN.read, "(stdin)", 1)
  when :file
    Apricot::CodeLoader.require(File.expand_path(args.first))
  end
end
