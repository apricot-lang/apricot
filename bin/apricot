#!/usr/bin/env rbx
# vim: ft=ruby:

unless defined?(Rubinius)
  $stderr.puts "Error: Apricot must be run on Rubinius."
  exit 1
end

unless Rubinius.ruby19?
  $stderr.puts "Warning: Apricot must be run in Ruby 1.9 mode, executing rbx -X19..."
  exec("/usr/bin/env", "rbx", "-X19", file, *ARGV)
end

require 'apricot'

evals = []
bytecode = false

options = Rubinius::Options.new "Usage: #{$0} [options] [program]", 20
options.doc "OPTIONS:"

options.on "-e", "CODE", "evaluate CODE and print the result" do |code|
  evals << [:eval, code]
end

options.on "-B", "--bytecode", "print bytecode after compiling" do
  bytecode = true
end

options.on "-h", "--help", "display this help" do
  puts options
  exit
end

options.parse(ARGV).each do |file|
  evals << [:file, file]
end

if evals.empty?
  if $stdin.tty?
    require 'apricot/repl'
    Apricot::REPL.new('apr> ', bytecode).run
  else
    evals << [:stdin]
  end
end

evals.each do |type, *args|
  case type
  when :eval
    Apricot::Compiler.eval(args.first, "(eval)", 1, bytecode)
  when :stdin
    Apricot::Compiler.eval(STDIN.read, "(stdin)", 1, bytecode)
  when :file
    # The code is executed as it compiles.
    Apricot::Compiler.compile(args.first, nil, bytecode)
  end
end
